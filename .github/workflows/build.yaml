name: "Build ISO"
on:
  workflow_dispatch:
    # inputs:
    #   hostname:
    #     type: string
    #     description: "Name of this machine"
    #     required: true
    #   username:
    #     type: string
    #     description: "The user used to connect and operate to this machine"
    #     required: false
    #   time_zone:
    #     type: string
    #     description: "Configure timezone of this machine"
    #     default: "Europe/Amsterdam"
    #     required: false
    #   raspberry_model:
    #     type: choice
    #     description: "Raspberry pi model"
    #     options:
    #       - "3"
    #       - "4"
    #     required: false
    #   # No mechanism yet to provide multiple keys
    #   ssh_key:
    #     type: string
    #     description: Public SSH Key
    #     required: false
    #   wifi_enabled:
    #     type: boolean
    #     default: true
    #     description: Include wifi
    #   wifi_network_name:
    #     type: string
    #     description: SSID (wifi name)
    #     required: false
    #   wifi_network_psk:
    #     type: string
    #     description: PSK (wifi password)
    #     required: false
# env:
#   INPUT_HOSTNAME: ${{ github.event.inputs.hostname }}
#   INPUT_USERNAME: ${{ github.event.inputs.username }}
#   INPUT_TIME_ZONE: ${{ github.event.inputs.time_zone }}
#   INPUT_RASPBERRY_MODEL: ${{ github.event.inputs.raspberry_model }}
#   INPUT_SSH_KEY: ${{ github.event.inputs.ssh_key }}
#   INPUT_WIFI_ENABLED: ${{ github.event.inputs.wifi_enabled }}
#   INPUT_WIFI_NETWORK_NAME: ${{ github.event.inputs.wifi_network_name }}
#   INPUT_WIFI_NETWORK_PSK: ${{ github.event.inputs.wifi_network_psk }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v27
      with:
        extra_nix_config: |
          system-features = aarch64-linux arm-linux
    - run: |
         DEBIAN_FRONTEND=noninteractive
         sudo apt-get update -q -y && sudo apt-get install -q -y tree qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
    # - run: nix build --impure --option system aarch64-linux --option sandbox false --extra-platforms aarch64-linux .#nixos
    # - run: nix build --print-out-paths .\#nixosConfigurations.nixos-router.config.system.build.toplevel
    - run: nix build --impure --print-out-paths .#raspi-image
    - run: tree result
    - run: echo $INPUT_WIFI_ENABLED
    - uses: actions/upload-artifact@v4
      with:
        name: rpi-iso
        path: result/sd-image
        retention-days: 5
